<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD////8/////P////z4f/h88D/wPOAf4BzgD8Ac4AeAHOADABzwAAA8+AAAfPwAAPz+AAH8/wAD/P+A
        B/z/gAf8/wAD/P4AAfz8AAD8+AAAfPAAADzgAwAc4AeAHOAPwBzgH+Ac8D/wPPh/+Hz////8/////P//
        //w=
</value>
  </data>
</root>